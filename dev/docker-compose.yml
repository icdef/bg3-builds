services:

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - '8888:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres-admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  db:
    image: postgres
    container_name: local_pgdb
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    ports:
      - '9200:9200'
    environment:
      - ELASTIC_PASSWORD=elastic
      - discovery.type=single-node
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=basic
      - "xpack.security.enabled=true"
      - "xpack.security.authc.api_key.enabled=true"
      - "xpack.security.authc.token.enabled=true"
    volumes:
      - conn-es-data:/usr/share/elasticsearch/data

    healthcheck:
      test: [ "CMD-SHELL", "curl -u elastic:elastic --fail --silent localhost:9200/_cluster/health | grep green || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 20

  # before this runs i need to execute somehow
  #curl -u elastic:elastic -X POST http://localhost:9200/_security/user/kibana_system/_password -d '{"password":"kibana"}' -H 'Content-Type: application/json'
  init-kibana:
    image: curlimages/curl:8.9.1
    entrypoint: [ "sh", "-c", "curl -u elastic:elastic -X POST http://elasticsearch:9200/_security/user/kibana_system/_password -d '{\"password\":\"kibana\"}' -H 'Content-Type: application/json'" ]
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.15.0
    depends_on:
      init-kibana:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD-SHELL", "curl -u elastic:elastic --fail --silent localhost:5601/api/task_manager/_health  -H 'kbn-xsrf: true'" ]
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana
      - "xpack.security.enabled=false"
      - "xpack.license.self_generated.type=basic"
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY="YVbpB94Y50W4YyTmrLi2GjtzxSKVRR2bPBmiqrREhRqGodDwfH+BuXTzi/RqDMM1


  elastic-connectors:
    container_name: elastic-connector-postgres
    image: docker.elastic.co/enterprise-search/elastic-connectors:8.15.0.0
    volumes:
      - "./connectors-config:/config"
    command: /app/bin/elastic-ingest -c /config/config.yml
    depends_on:
      kibana:
        condition: service_healthy


volumes:
  db:
  pgadmin-data:
  conn-es-data:
